<?php

namespace Cairn\UserBundle\Repository;

use Cairn\UserBundle\Repository\BaseNotificationRepository;
use Cairn\UserBundle\Entity\BaseNotification;
use Cairn\UserBundle\Entity\PaymentNotification;
use Cairn\UserBundle\Entity\NotificationData;

use Doctrine\ORM\QueryBuilder;                                                 

/**
 * PaymentNotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaymentNotificationRepository extends BaseNotificationRepository
{

    public function findPaymentNotification(NotificationData $nD,array $types = [],$amount)
    {
        if(! $nD){return NULL;}

         $pb = $this->createQueryBuilder('p')->andWhere('p.notificationData = :notificationDataId')
                ->setParameter('notificationDataId',$nD->getId());

         $this->whereTypes($pb,$types)->whereMinAmount($pb,$amount);

         return $pb->getQuery()->getOneOrNullResult();
    }


    public function whereMinAmount(QueryBuilder $pb, $amount)
    {
        $pb->andWhere('p.minAmount <= :amount')
            ->setParameter('amount',$amount);

        return $this;
    }

    public function whereTypes(QueryBuilder $pb, array $types)
    {
        if(! empty($types) ){
            $conditions = array();
            foreach($types as $type){
                $conditions[] = "p.types LIKE '%i:".$type.";%'";
            }

            $orX = $pb->expr()->orX();
            $orX->addMultiple($conditions);
            $pb->andWhere($orX);
        }

        return $this;
    }
}
