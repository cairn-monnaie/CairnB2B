<?php

namespace Cairn\UserBundle\Repository;

use Cairn\UserBundle\Entity\PushNotification;
use Cairn\UserBundle\Entity\AppData;

use Doctrine\ORM\QueryBuilder;                                                 

/**
 * PushNotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PushNotificationRepository extends \Doctrine\ORM\EntityRepository
{

    public function findByTokenAndKeyword($token,$keyword, AppData $appData = null)
    {
        $pb = $this->createQueryBuilder('p');
        $this->whereToken($pb,$token)->whereKeyword($pb,$keyword); 

        if($appData){
            $pb->andWhere('p.appData = :appDataId')
                ->setParameter('appDataId',$appData->getId());
            return $pb->getQuery()->getOneOrNullResult();
        }
        return $pb->getQuery()->getResult();
    }


    public function getTokensAsArray(array $appDataIds = [],$keyword = NULL)
    {
        if( empty($appDataIds) ){
            return [];
        }

        $pb = $this->createQueryBuilder('p');

        $pb->select('p.deviceToken');
        $this->whereAppDataIsIn($pb,$appDataIds);

        if($keyword){
            $this->whereKeyword($pb,$keyword);
        }

        return $pb->getQuery()->getResult("COLUMN_HYDRATOR");
    }

    public function whereAppDataIsIn(QueryBuilder $pb,array $appDataIds)
    {
        $pb->andWhere('p.appData IN (:ids)')
            ->setParameter('ids',$appDataIds);

        return $this;
    }

    public function whereToken(QueryBuilder $pb, $token)
    {
        $pb->andWhere('p.deviceToken = :token')
            ->setParameter('token',$token);

        return $this;
    }

    public function whereKeyword(QueryBuilder $pb, $keyword)
    {
        $pb->andWhere('p INSTANCE OF '.PushNotification::mapKeyWordToClass($keyword));

        return $this;
    }
}
