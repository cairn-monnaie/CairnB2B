#server {
#    listen 8000;
#    listen [::]:8000;
#
#    server_name example.local;
#
#    location ~ /\.well-known/acme-challenge {
#        root /var/www/letsencrypt;
#    }
#
#    location ~ /\. { 
#        deny all; 
#        access_log off; 
#        log_not_found off; 
#    }
#
#    location / {
#        return 301 https://moncompte.cairn-monnaie.local$request_uri; 
#    }
#}

server {
    listen 8000;
    listen [::]:8000;

    server_name moncompte.local;
    root /var/www/Symfony/web;

#    ssl off;
#    ssl_certificate     /etc/letsencrypt/live/moncompte.cairn-monnaie.local/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/moncompte.cairn-monnaie.local/privkey.pem;

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app_dev.php$is_args$args;
    }
    # PROD
    location ~ ^/(app_dev|_intellij_phpdebug_validator)\.php(/|$) {
        fastcgi_pass engine:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
       # When you are using symlinks to link the document root to the
       # current version of your application, you should pass the real
       # application path instead of the path to the symlink to PHP
       # FPM.
       # Otherwise, PHP's OPcache may not properly detect changes to
       # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
       # for more information).
       fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
       fastcgi_param DOCUMENT_ROOT $realpath_root;
       # Prevents URIs that include the front controller. This will 404:
       # http://domain.tld/app.php/some-path
       # Remove the internal directive to allow URIs like this
       #internal;
   }

   # return 404 for all other php files not matching the front controller
   # this prevents access to other php files you don't want to be accessible.
   location ~ \.php$ {
     return 404;
   }

   error_log /var/log/nginx/moncompte_error.log;
   access_log /var/log/nginx/moncompte_access.log;
}

